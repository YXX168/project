创建仓库
git init

检查文件状态
git status
git status -s

新文件跟踪和管理
git add 文件名
git add .

提交更新
git commit -m "描述信息"

上传远程仓库
git push

跳过暂存区提交更新 加-a
git commit -a -m "描述信息"

撤销文件修改，从git仓库还原提交到仓库中的最新文件覆盖本地文件
git checkout -- 文件名

从暂存区中移除
git reset HEAD 要移除的文件名
git reset HEAD .

从仓库和工作区同时移除文件
git rm 文件名
git rm -r 文件夹名

从仓库移除此文件，但保留在工作区中
git rm --cached 文件名

创建忽略文件白名单配置文件
.gitignore
#开头是注释
/结尾是目录

查看提交历史
git log
git log -2
git log -2 --pretty=oneline
git log -2 --pretty=format:"%h | %an | %ar | %s"

回退到指定版本
1、先查历史找到指定版本ID
git log
2、回退指定版本
git reset --hard <ID>
3、回退过程中再次查看所有版本信息要用reflog
git reflog --pretty=oneline
4、跳转最新版本
git reset --hard <ID>

绑定ssh
ssh-keygen -t rsa -b 4096 -C "邮箱"
本地计算机用户/.ssh文件夹中用记事本将id_rsa.pub文件打开，复制内容到GitHub设置中

检测ssh
ssh -T git@github.com

克隆仓库到本地
git clone 远程仓库地址

查看分支列表
git branch

修改分支名称
git branch -M 新名字

创建分支
git branch 分支名称

切换分支
git checkout 分支名称

复合命令创建新分支并立即切换
git checkout -b 分支名称

合并分支
切换到主分支执行git merge login

删除分支
git branch -d 分支名称

本地分支推送到远程仓库
git push -u 远程仓库别名 本地分支名:远程分支名
git pushi -u origin 分支名

查看远程分支
git remote show 远程仓库名称

下载远程仓库中的分支
git checkout 远程分支名称

从远程仓库拉取最新文件
git pull

删除远程分支
git push 远程仓库名称 --delete 远程分支名称